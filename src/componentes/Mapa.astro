---
export interface Props {
  // Porcentaje que no debe superar a lo ancho (1-100)
  ancho?: number;
  // Porcentaje que no debe superar a lo alto (1-100)
  alto?: number;
}

const { ancho, alto } = Astro.props;
---

<svg class="mapa" data-proporciones={JSON.stringify({ ancho, alto })}></svg>
<div id="informacion">
  <p class="nombre"></p>
  <p class="espdet"></p>
</div>

<script>
  import { crearLinea, escalaCoordenadas, extremosLugar } from '@enflujo/alquimia';
  import codigosPdet from '@/utilidades/pdet';
  import type { ExtremosCoordenadas } from '@/tipos';
  import type { FeatureCollection } from 'geojson';

  const rutaMunicipios = 'https://enflujo.com/bodega/colombia/municipios.json';
  const mapa = document.querySelector('.mapa') as HTMLDivElement;
  const informacion = document.getElementById('informacion');
  const infoMunucipio = informacion.querySelector('.nombre') as HTMLParagraphElement;
  const infoEsPdet = informacion.querySelector('.espdet') as HTMLParagraphElement;

  let municipios: FeatureCollection;
  let extremosGeo: ExtremosCoordenadas;
  const proporciones = JSON.parse(mapa.dataset.proporciones);

  async function inicio() {
    municipios = await fetch(rutaMunicipios).then((res) => res.json());

    municipios.features.forEach((municipio) => {
      let esPdet = false;
      if (codigosPdet.includes(municipio.properties.codigo)) {
        esPdet = true;
      }

      municipio.properties.pdet = esPdet;
    });

    extremosGeo = extremosLugar(municipios);
    escalar();
  }

  function calcularPorcentaje(valor: number, porcentaje: number) {
    return valor * (porcentaje / 100);
  }

  function escalar() {
    let ancho = window.innerWidth;
    let alto = window.innerHeight;
    const mapearCoordenadas = escalaCoordenadas(
      extremosGeo.latitudMin,
      extremosGeo.latitudMax,
      extremosGeo.longitudMin,
      extremosGeo.longitudMax
    );
    const coordenadasAncho = extremosGeo.longitudMax - extremosGeo.longitudMin;
    const coordenadasAlto = extremosGeo.latitudMax - extremosGeo.latitudMin;

    if (proporciones.ancho && proporciones.ancho <= 100) {
      ancho = calcularPorcentaje(ancho, proporciones.ancho);
    }

    if (proporciones.alto && proporciones.alto <= 100) {
      alto = calcularPorcentaje(alto, proporciones.alto);
    }

    // Revisa las proporciones del mapa para que no se deforme
    if (coordenadasAncho > coordenadasAlto) {
      alto = (ancho * (coordenadasAlto / coordenadasAncho)) | 0;
    } else {
      ancho = (alto * (coordenadasAncho / coordenadasAlto)) | 0;
    }

    mapa.setAttribute('width', `${ancho}`);
    mapa.setAttribute('height', `${alto}`);

    mapa.innerHTML = '';

    municipios.features.forEach((municipio) => {
      if (municipio.geometry.type === 'Polygon' || municipio.geometry.type === 'MultiPolygon') {
        const linea = crearLinea(municipio.geometry, mapearCoordenadas, ancho, alto);
        const zona = document.createElementNS('http://www.w3.org/2000/svg', 'path');

        zona.setAttribute('class', municipio.properties.pdet ? 'municipio pdet' : 'municipio');
        zona.setAttribute('d', linea);
        zona.onmousemove = (evento) => {
          const dims = mapa.getBoundingClientRect();
          const x = evento.clientX - dims.x;
          const y = evento.clientY - dims.y;

          infoMunucipio.innerText = `${municipio.properties.nombre}, (${municipio.properties.dep})`;
          infoEsPdet.innerText = municipio.properties.pdet ? 'PDET' : '';

          if (municipio.properties.pdet) {
            informacion.classList.add('pdet');
          } else {
            informacion.classList.remove('pdet');
          }

          Object.assign(informacion.style, {
            top: `${y}px`,
            left: `${x}px`,
          });
        };

        mapa.appendChild(zona);
      }
    });

    mapa.onmouseenter = () => {
      informacion.classList.add('visible');
    };
    mapa.onmouseleave = () => {
      informacion.classList.remove('visible');
    };
  }

  inicio();

  window.onresize = escalar;
</script>

<style lang="scss">
  #informacion {
    position: absolute;
    pointer-events: none;
    opacity: 0;
    max-width: 200px;
    padding: 0.5em;
    font-size: 0.8em;
    font-weight: bold;

    background-color: rgb(253, 253, 250);
    color: black;
    z-index: 9;
    transition: opacity 0.42s ease-out;
    transform: translate(-50%, -105%);

    &.visible {
      opacity: 1;
    }

    &.pdet {
      background-color: rgb(252, 154, 149);
    }

    .espdet {
      font-size: 0.6em;
      font-style: italic;
      text-align: right;
      font-weight: normal;
    }
  }
</style>
