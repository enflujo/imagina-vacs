---
export interface Props {
  id: string;
}

const { id } = Astro.props;
---

<div id={id} class="contenido desplegable">
  <div class="cerrar">X</div>
  <slot />
</div>

<script define:vars={{ id }}>
  const contenedorDesplegable = document.getElementById(id);
  const cerrar = contenedorDesplegable.querySelector('.cerrar');

  // Cerrar el glosario con click afuera
  function clicFuera(evento) {
    const elemento = evento.target;

    if (id === 'glosario' && elemento.id === 'botonGlosario') {
      return;
    } else if (id === 'creditos' && elemento.id === 'botonCreditos') {
      return;
    }

    if (
      !(
        contenedorDesplegable === elemento ||
        contenedorDesplegable.contains(elemento) ||
        elemento.classList.contains('abrirGlosario')
      )
    ) {
      contenedorDesplegable.classList.remove('visible');
    }
  }

  cerrar.addEventListener('click', () => {
    contenedorDesplegable.classList.remove('visible');
  });

  document.body.addEventListener('click', clicFuera);
</script>

<style lang="scss" is:global>
  @import '@/scss/constantes';

  #glosario {
    .titulo {
      font-size: 2.2em;
      color: var(--rosaChicle);

      border-bottom: 1px solid var(--grisTexto);
      padding-bottom: 1.2em;
    }
  }
  .desplegable {
    position: fixed;
    overflow-y: auto;
    top: 0;
    left: 0;
    background-color: var(--blancoNube);
    height: 100%;
    width: 90vw;
    padding: 2em 2em 3em 2.2em;
    z-index: 1;
    transform: translateX(-100%);
    transition: transform 0.25s ease-out;

    h3,
    h4 {
      margin-top: 2em;
      padding-bottom: 0.2em;
    }

    li {
      padding-bottom: 0.2em;
    }

    ul {
      border-bottom: 1px solid;
      padding-bottom: 2em;
    }

    h3 {
      border-bottom: 1px solid;
      padding-bottom: 2em;
      font-size: 1.4em;
      line-height: 1.2;
    }

    h4 {
      font-size: 1.2em;
      line-height: 1.3em;
      font-weight: 400;
      padding-bottom: 0.1em;
    }

    p {
      margin: 0.5em 0;
      line-height: 1.3em;
    }

    &.visible {
      transform: translateX(0);
    }

    .cerrar {
      font-size: 1.6em;
      margin: 0;
      padding: 0;
      cursor: pointer;
      transition: opacity 0.15s ease-out;
      text-align: right;
      margin-right: -1em;

      &:hover {
        opacity: 0.7;
      }
    }
  }

  @media screen and (min-width: $corte2) {
    .desplegable {
      width: 75%;
      height: 100%;
      padding: 7em 7em;
    }
  }

  @media screen and (min-width: $corte3) {
    .desplegable {
      width: 60%;
      height: 100%;
      padding: 7em 7em;
      z-index: 1;
    }
  }

  @media screen and (min-width: $corte4) {
    .desplegable {
      width: 35%;
      height: 100%;
      padding: 7em 7em;
      z-index: 1;
    }
  }
</style>
